name: GCC

on: push

jobs:
  gcc:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        version: [9, 10, 11, 12]
      fail-fast: false
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v4
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y catch2 cmake g++-${{ matrix.version }} libsqlite3-dev pkg-config
      - name: Build with GNU GCC ${{ matrix.version }}
        run: |
          export CXX=g++-${{ matrix.version }}
          export CC=gcc-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake ../
          make -j2
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
      - name: Build with GNU GCC ${{ matrix.version }} - no SQLite
        run: |
          export CXX=g++-${{ matrix.version }}
          export CC=gcc-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build-no-sqlite
          cd build-no-sqlite
          cmake ../ -DNO_SQLITE=ON
          make -j2
      - name: Tests - no SQLite
        run: |
          cd "$GITHUB_WORKSPACE"/build-no-sqlite
          ctest -V
      - name: Build with GNU GCC ${{ matrix.version }} - static linking
        run: |
          export CXX=g++-${{ matrix.version }}
          export CC=gcc-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          ./build-static.sh
        # Only do static build on latest version in the matrix.
        if: matrix.version == 12
      - name: Build with GNU GCC ${{ matrix.version }} - bundled SQLite
        run: |
          export CXX=g++-${{ matrix.version }}
          export CC=gcc-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build-bundled
          cd build-bundled
          cmake ../ -DUSE_BUNDLED_SQLITE=ON -DENABLE_LTO=ON
          make -j2
        if: matrix.version == 11
      - name: Tests - bundled SQLite
        run: |
          cd "$GITHUB_WORKSPACE"/build-bundled
          ctest -V
        if: matrix.version == 11
